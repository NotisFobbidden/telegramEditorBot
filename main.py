# coding=utf-8

from config import TOKEN
from videoedit import *
import telebot as tb
import os
import uuid

bot = tb.TeleBot(TOKEN)

dialogues = {}

for i in ['InputFiles', 'OutputFiles']:
    if os.path.exists(i):
        pass
    else:
        os.mkdir(i)

def savevideo(message):
    video = message.video
    file_info = bot.get_file(video.file_id)
    downloaded_file = bot.download_file(file_info.file_path)
    with open(f'InputFiles/{message.from_user.id}.mp4', 'wb') as file:
        file.write(downloaded_file)
        file.close()

def savevideoformerging(message):
    video = message.video
    file_info = bot.get_file(video.file_id)
    downloaded_file = bot.download_file(file_info.file_path)
    with open(f'InputFiles/{message.from_user.id}_{str(uuid.uuid4())[:8]}.mp4', 'wb') as file:
        file.write(downloaded_file)
        file.close()

@bot.message_handler(commands=['start'])
def start(message):
    keyboard = tb.types.InlineKeyboardMarkup([[
        tb.types.InlineKeyboardButton('–û–±—Ä–µ–∑–∞—Ç—å ‚úÇÔ∏è', callback_data='Cut'),
        tb.types.InlineKeyboardButton('–£—Å–∫–æ—Ä–∏—Ç—å ‚èèÔ∏è', callback_data='Speed'),
        tb.types.InlineKeyboardButton('–°–∫–ª–µ–∏—Ç—å üéû', callback_data='Concatenate')
    ]])
    bot.send_message(message.chat.id, '''–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ—Ñ–∞–π–ª–æ–≤.
–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ''', reply_markup=keyboard)

@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    if call.data == 'Continue':
        mergevideos(call.from_user.id)
        bot.send_video(call.from_user.id, video=open(f'OutputFiles/{call.from_user.id}.mp4', 'rb'))        
        files = [file_ for file_ in os.listdir('InputFiles/') if str(call.from_user.id) in file_]
        [os.unlink('InputFiles/' + file_) for file_ in files]
        os.unlink(f'OutputFiles/{call.from_user.id}.mp4')
    else:
        dialogues[call.from_user.id] = call.data
        bot.send_message(call.from_user.id, '–ü—Ä–∏—à–ª–∏ –º–Ω–µ —Å–≤–æ–µ –≤–∏–¥–µ–æ')

@bot.message_handler(content_types=['video'])
def getuservideo(message):
    match dialogues.get(message.from_user.id):
        case 'Cut':
            print('Cut')
            try:
                savevideo(message=message)
                bot.send_message(message.chat.id, '''–•–æ—Ä–æ—à–æ, –ø—Ä–∏—à–ª–∏ –º–Ω–µ —Ç–∞–π–º–∫–æ–¥—ã –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:
–ù–∞—á–∞–ª—å–Ω—ã–π —Ç–∞–π–º–∫–æ–¥:–ö–æ–Ω–µ—á–Ω—ã–π —Ç–∞–π–º–∫–æ–¥ (–ï—Å–ª–∏ –∫–∞–∫–æ–π-—Ç–æ –∏–∑ —Ç–∞–π–º–∫–æ–¥–æ–≤ –±–æ–ª—å—à–µ –º–∏–Ω—É—Ç—ã, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–µ–∫—É–Ω–¥—ã:\n1 –º–∏–Ω—É—Ç–∞ 30 —Å–µ–∫. :\n90)''')
            except:
                bot.send_message(message.chat.id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞. –í–æ–∑–º–æ–∂–Ω–æ –æ–Ω –ø–æ–≤—Ä–µ–∂–¥–µ–Ω –∏–ª–∏ –µ–≥–æ —Ä–∞–∑–º–µ—Ä –ø—Ä–∏–≤—ã—à–∞–µ—Ç 20–ú–ë?")
        case 'Speed':
            try:
                savevideo(message=message)
                bot.send_message(message.chat.id, '''–í–æ —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –º–Ω–µ —É—Å–∫–æ—Ä–∏—Ç—å –≤–∏–¥–µ–æ? –ü—Ä–∏—à–ª–∏ –º–Ω–µ —á–∏—Å–ª–æ –≤–æ—Ç –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:
–ß–∏—Å–ª–æ''')
            except:
                bot.send_message(message.chat.id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞. –í–æ–∑–º–æ–∂–Ω–æ –æ–Ω –ø–æ–≤—Ä–µ–∂–¥–µ–Ω –∏–ª–∏ –µ–≥–æ —Ä–∞–∑–º–µ—Ä –ø—Ä–∏–≤—ã—à–∞–µ—Ç 20–ú–ë?") 
        case 'Concatenate':
            keyboard = tb.types.InlineKeyboardMarkup([[
                tb.types.InlineKeyboardButton('–°–∫–ª–µ–∏—Ç—å', callback_data='Continue')
            ]])
            try: 
                savevideoformerging(message)
                bot.send_message(message.chat.id, '–î–∞–ª—å—à–µ –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏—Å—ã–ª–∞–π –º–Ω–µ —Å–≤–æ–∏ –≤–∏–¥–µ–æ –¥–ª—è —Å–∫–ª–µ–π–∫–∏', reply_markup=keyboard)
            except:
               bot.send_message(message.chat.id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞. –í–æ–∑–º–æ–∂–Ω–æ –æ–Ω –ø–æ–≤—Ä–µ–∂–¥–µ–Ω –∏–ª–∏ –µ–≥–æ —Ä–∞–∑–º–µ—Ä –ø—Ä–∏–≤—ã—à–∞–µ—Ç 20–ú–ë?") 
 

@bot.message_handler(content_types=['text'])
def getparams(message):
    match dialogues.get(message.from_user.id):
        case 'Cut':
            try:
                from_, to = tuple(map(int, message.text.split(':')))
                cropvideo(video=VideoFileClip(f'InputFiles/{message.from_user.id}.mp4'), startingtime=from_, endingtime=to, id=message.from_user.id)
                bot.send_message(message.chat.id, '–í—ã—Å—ã–ª–∞—é –≤–∏–¥–µ–æ...')
                bot.send_video(message.chat.id, video=open(f'OutputFiles/{message.from_user.id}.mp4', 'rb'))
            except:
                bot.send_message(message.chat.id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ :(")
        case 'Speed':
            try:
                speed = int(message.text)
                speedupvideo(video=VideoFileClip(f'InputFiles/{message.from_user.id}.mp4'), speed=speed, id=message.from_user.id)
                bot.send_message(message.chat.id, '–í—ã—Å—ã–ª–∞—é –≤–∏–¥–µ–æ...')
                bot.send_video(message.chat.id, video=open(f'OutputFiles/{message.from_user.id}.mp4', 'rb'))
            except:
                bot.send_message(message.chat.id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ :(")

    os.remove(f'InputFiles/{message.from_user.id}.mp4')
    os.remove(f'OutputFiles/{message.from_user.id}.mp4')
    del dialogues[message.from_user.id]


bot.polling()
